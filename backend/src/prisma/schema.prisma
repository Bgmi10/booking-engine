generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  role      Role
}
model Room {
  id          String   @id @default(uuid())
  name        String
  description String
  price       Float
  capacity    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  images       RoomImage[]
  bookings     Booking[]
  holds        TemporaryHold[]
}

model RoomImage {
  id          String   @id @default(uuid())
  url         String
  roomId      String
  room        Room     @relation(fields: [roomId], references: [id], onDelete: Cascade)
}

model Booking {
  id          String        @id @default(uuid())
  guestName   String  
  guestEmail  String  
  checkIn     DateTime  
  status      BookingStatus @default(PENDING)
  checkOut    DateTime  
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  room        Room          @relation(fields: [roomId], references: [id], onDelete: Cascade)
  roomId      String  
  payment     Payment?
  metadata    Json?
  @@index([roomId, checkIn, checkOut])
}

model TemporaryHold {
  id          String   @id @default(uuid())
  guestName   String
  guestEmail  String
  checkIn     DateTime
  checkOut    DateTime
  createdAt   DateTime @default(now())
  expiresAt   DateTime
  room        Room     @relation(fields: [roomId], references: [id], onDelete: Cascade)
  roomId      String
}

model Payment {
  id              String           @id @default(uuid())
  stripeSessionId String           @unique
  amount          Float
  currency        String
  status          PaymentStatus
  createdAt       DateTime         @default(now())
  booking         Booking          @relation(fields: [bookingId], references: [id])
  bookingId       String           @unique
}

enum PaymentStatus {
  PENDING
  COMPLETED
  REFUNDED
  FAILED
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
}

enum Role {
  ADMIN
  USER
}