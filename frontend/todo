To-Do List
Backend (First Priority):
Create externalVendorController.ts: This will contain the logic for creating, viewing, updating, and deleting the external vendor contacts associated with a wedding proposal.
Create serviceRequestController.ts: This will manage the entire bespoke service request workflow, including creating requests, adding messages/quotes, uploading photos, and handling the "accepted" status.
Add Routes for Vendors & Service Requests: We will add the new API endpoints to customerRoute.ts and adminRoute.ts to make the controller logic accessible to the frontend.

Frontend (Second Priority):
Connect Vendor UI: We will update the GuestProposalCreationModal.tsx and the WeddingPortalDashboard.tsx to use the new backend endpoints for saving and displaying external vendor information.
Connect Service Request UI (Guest): We will update the ServiceRequestModal.tsx and GuestProposalCreationModal.tsx to use the new backend endpoints. This includes handling the chat-like message flow and file uploads.
Build Service Request UI (Admin): We will create a new component in the admin dashboard to allow administrators to view incoming requests, provide quotes, and communicate with guests.